{"ast":null,"code":"// This is the base path of the Express route we'll define\nconst BASE_URL = \"/api/users\";\n\n// export async function SignUp(userData) {\n// Fetch uses an options object as a second arg to make requests\n// other than basic GET requests, include data, headers, etc.\n//   const res = await fetch(BASE_URL, {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n// Fetch requires data payloads to be stringified\n// and assigned to a body property on the options object\n//     body: JSON.stringify(userData),\n//   });\n\n// Check if request was successful\n//   if (res.ok) {\n// res.json() will resolve to the JWT\n//     return res.json();\n//   } else {\n//     throw new Error(\"Invalid Sign Up\");\n//   }\n// }\n\n// export async function login(credentials) {\n// Fetch uses an options object as a second arg to make requests\n// other than basic GET requests, include data, headers, etc.\n//   const res = await fetch(BASE_URL, {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n// Fetch requires data payloads to be stringified\n// and assigned to a body property on the options object\n//     body: JSON.stringify(credentials),\n//   });\n\n// Check if request was successful\n//   if (res.ok) {\n// res.json() will resolve to the JWT\n//     return res.json();\n//   } else {\n//     throw new Error(\"Invalid Sign Up\");\n//   }\n// }","map":{"version":3,"names":["BASE_URL"],"sources":["/Users/mindyt/Desktop/Practice/mern-infrastructure/src/utilities/users-api.js"],"sourcesContent":["// This is the base path of the Express route we'll define\nconst BASE_URL = \"/api/users\";\n\n// export async function SignUp(userData) {\n// Fetch uses an options object as a second arg to make requests\n// other than basic GET requests, include data, headers, etc.\n//   const res = await fetch(BASE_URL, {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n// Fetch requires data payloads to be stringified\n// and assigned to a body property on the options object\n//     body: JSON.stringify(userData),\n//   });\n\n// Check if request was successful\n//   if (res.ok) {\n// res.json() will resolve to the JWT\n//     return res.json();\n//   } else {\n//     throw new Error(\"Invalid Sign Up\");\n//   }\n// }\n\n// export async function login(credentials) {\n// Fetch uses an options object as a second arg to make requests\n// other than basic GET requests, include data, headers, etc.\n//   const res = await fetch(BASE_URL, {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n// Fetch requires data payloads to be stringified\n// and assigned to a body property on the options object\n//     body: JSON.stringify(credentials),\n//   });\n\n// Check if request was successful\n//   if (res.ok) {\n// res.json() will resolve to the JWT\n//     return res.json();\n//   } else {\n//     throw new Error(\"Invalid Sign Up\");\n//   }\n// }\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,YAAY;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}