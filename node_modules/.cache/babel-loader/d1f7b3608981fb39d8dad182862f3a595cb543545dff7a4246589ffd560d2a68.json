{"ast":null,"code":"// Import all named exports attached to a usersAPI object\n// This syntax can be helpful documenting where the methods come from\nimport * as usersAPI from \"./users-api\";\nexport async function SignUp(userData) {\n  // Delegate the network request code to the users-api.js API module\n  // which will ultimately return a JSON Web Token (JWT)\n  const token = await usersAPI.SignUp(userData);\n  // Persist the \"token\"\n  localStorage.setItem(\"token\", token);\n  // Baby step by returning whatever is sent back by the server\n  return getUser();\n}\n_c = SignUp;\nexport async function login(credentials) {\n  // Delegate the network request code to the users-api.js API module\n  // which will ultimately return a JSON Web Token (JWT)\n  const token = await usersAPI.SignUp(credentials);\n  // Persist the \"token\"\n  localStorage.setItem(\"token\", token);\n  // Baby step by returning whatever is sent back by the server\n  return getUser();\n}\nexport function logOut() {\n  localStorage.removeItem(\"token\");\n}\nexport function getToken() {\n  // getItem returns null if there's no string\n  const token = localStorage.getItem(\"token\");\n  if (!token) return null;\n  // Obtain the payload of the token\n  const payload = JSON.parse(atob(token.split(\".\")[1]));\n  // A JWT's exp is expressed in seconds, not milliseconds, so convert\n  if (payload.exp < Date.now() / 1000) {\n    // Token has expired - remove it from localStorage\n    localStorage.removeItem(\"token\");\n    return null;\n  }\n  return token;\n}\nexport function getUser() {\n  const token = getToken();\n  // If there's a token, return the user in the payload, otherwise return null\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\nexport function checkToken() {\n  alert(\"clicked\");\n}\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["usersAPI","SignUp","userData","token","localStorage","setItem","getUser","_c","login","credentials","logOut","removeItem","getToken","getItem","payload","JSON","parse","atob","split","exp","Date","now","user","checkToken","alert","$RefreshReg$"],"sources":["/Users/mindyt/Desktop/Practice/mern-infrastructure/src/utilities/users-service.js"],"sourcesContent":["// Import all named exports attached to a usersAPI object\n// This syntax can be helpful documenting where the methods come from\nimport * as usersAPI from \"./users-api\";\n\nexport async function SignUp(userData) {\n  // Delegate the network request code to the users-api.js API module\n  // which will ultimately return a JSON Web Token (JWT)\n  const token = await usersAPI.SignUp(userData);\n  // Persist the \"token\"\n  localStorage.setItem(\"token\", token);\n  // Baby step by returning whatever is sent back by the server\n  return getUser();\n}\n\nexport async function login(credentials) {\n  // Delegate the network request code to the users-api.js API module\n  // which will ultimately return a JSON Web Token (JWT)\n  const token = await usersAPI.SignUp(credentials);\n  // Persist the \"token\"\n  localStorage.setItem(\"token\", token);\n  // Baby step by returning whatever is sent back by the server\n  return getUser();\n}\n\nexport function logOut() {\n  localStorage.removeItem(\"token\");\n}\n\nexport function getToken() {\n  // getItem returns null if there's no string\n  const token = localStorage.getItem(\"token\");\n  if (!token) return null;\n  // Obtain the payload of the token\n  const payload = JSON.parse(atob(token.split(\".\")[1]));\n  // A JWT's exp is expressed in seconds, not milliseconds, so convert\n  if (payload.exp < Date.now() / 1000) {\n    // Token has expired - remove it from localStorage\n    localStorage.removeItem(\"token\");\n    return null;\n  }\n  return token;\n}\n\nexport function getUser() {\n  const token = getToken();\n  // If there's a token, return the user in the payload, otherwise return null\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\n\nexport function checkToken() {\n  alert(\"clicked\");\n}\n"],"mappings":"AAAA;AACA;AACA,OAAO,KAAKA,QAAQ,MAAM,aAAa;AAEvC,OAAO,eAAeC,MAAMA,CAACC,QAAQ,EAAE;EACrC;EACA;EACA,MAAMC,KAAK,GAAG,MAAMH,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;EAC7C;EACAE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACpC;EACA,OAAOG,OAAO,CAAC,CAAC;AAClB;AAACC,EAAA,GARqBN,MAAM;AAU5B,OAAO,eAAeO,KAAKA,CAACC,WAAW,EAAE;EACvC;EACA;EACA,MAAMN,KAAK,GAAG,MAAMH,QAAQ,CAACC,MAAM,CAACQ,WAAW,CAAC;EAChD;EACAL,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACpC;EACA,OAAOG,OAAO,CAAC,CAAC;AAClB;AAEA,OAAO,SAASI,MAAMA,CAAA,EAAG;EACvBN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;AAClC;AAEA,OAAO,SAASC,QAAQA,CAAA,EAAG;EACzB;EACA,MAAMT,KAAK,GAAGC,YAAY,CAACS,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACV,KAAK,EAAE,OAAO,IAAI;EACvB;EACA,MAAMW,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACd,KAAK,CAACe,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD;EACA,IAAIJ,OAAO,CAACK,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,EAAE;IACnC;IACAjB,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChC,OAAO,IAAI;EACb;EACA,OAAOR,KAAK;AACd;AAEA,OAAO,SAASG,OAAOA,CAAA,EAAG;EACxB,MAAMH,KAAK,GAAGS,QAAQ,CAAC,CAAC;EACxB;EACA,OAAOT,KAAK,GAAGY,IAAI,CAACC,KAAK,CAACC,IAAI,CAACd,KAAK,CAACe,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACI,IAAI,GAAG,IAAI;AAClE;AAEA,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3BC,KAAK,CAAC,SAAS,CAAC;AAClB;AAAC,IAAAjB,EAAA;AAAAkB,YAAA,CAAAlB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}